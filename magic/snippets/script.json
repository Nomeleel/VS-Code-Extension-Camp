{
    "Add Script": {
        "prefix": ["Script", "script"],
        "scope": "dart",
        "body": [
            "import 'package:magic_pkg/mgrs/DynamicCodeMgr.dart';",
            "",
            "import '../BaseScript.dart';",
            "",
            "class $0 extends BaseScript {",
            "\tvoid init() {}",
            "",
            "\tvoid dispose() {}",
            "",
            "\tvoid tap() {}",
            "}",
            "",
            "DynamicCode init$0() {",
            "\t$0 page = $0();",
            "\tDynamicCode dynamicCode = DynamicCode();",
            "\tdynamicCode.setComponent = page.setComponent;",
            "\tdynamicCode.init = page.init;",
            "\tdynamicCode.dispose = page.dispose;",
            "\tdynamicCode.tap = page.tap;",
            "",
            "\treturn dynamicCode;",
            "}",
            "",
            "// Add in InitScript.dart",
            "",
            "//import '$0.dart';",
            "",
            "//dynamicCodeMap[\"$0\"] = init$0;"
        ],
        "description": "Add Script..."
    },
    "Print": {
        "prefix": ["sprint", "xprint", "prints", "printx"],
        "scope": "dart",
        "body": [
            "print('------------$0------------');",
            "print($0);",
            "print('---------------------------');"
        ],
        "description": "Print..."
    },
    "PrintMap": {
        "prefix": ["sprintMap", "xprintmap", "printMap", "printmap"],
        "scope": "dart",
        "body": [
            "print('------------$0------------');",
            "$0.forEach((k, v) {",
            "\tprint(k);",
            "\tprint(v);",
            "});",
            "print('---------------------------');"
        ],
        "description": "Print Map..."
    },
    "PrintList": {
        "prefix": ["sprintList", "xprintlist", "printList", "printlist"],
        "scope": "dart",
        "body": [
            "print('------------$0------------');",
            "$0.forEach(print);",
            "print('---------------------------');"
        ],
        "description": "Print List..."
    },
    "post": {
        "prefix": ["post", "postApi", "postapi"],
        "scope": "dart",
        "body": [
            "final Map responseMap = await apiService.post(",
            "\tapiPath: \"$1\",",
            "\tpostData: {",
            "\t\t\"$2\": \"\",",
            "\t\t\"$3\": \"\"",
            "\t},",
            "\tdesc: \"$4\",",
            ");"
        ],
        "description": "Post Api..."
    },
    "postCheck": {
        "prefix": ["postCheck", "postcheck"],
        "scope": "dart",
        "body": [
            "if (responseMap[\"code\"] == 0) {",
            "\t$0",
            "}"
        ],
        "description": "Post Result Check..."
    },
    "postCheckSuccess": {
        "prefix": ["postCheckSucess", "postchecksuccess", "checksuccess"],
        "scope": "dart",
        "body": [
            "if (responseMap[\"code\"] == 0 && responseMap[\"data\"][\"isSuccess\"]) {",
            "\t$0",
            "}"
        ],
        "description": "Post Result Check Success..."
    },
    "listenerMethod": {
        "prefix": ["listenerMethod", "listener"],
        "scope": "dart",
        "body": [
            "void $1Listener(Map sender, String fieldName, dynamic fieldValue) {",
            "\t$0",
            "}"
        ],
        "description": "Listener Method..."
    },
    "addListener": {
        "prefix": ["addListener", "addlistener"],
        "scope": "dart",
        "body": [
            "$1..offFieldChanged('$2', $3)",
            "\t..onFieldChanged('$2', $3);"
        ],
        "description": "Add Listener..."
    },
    "?.isEmpty": {
        "prefix": ["?.isEmpty", "?.isempty", "isempty"],
        "scope": "dart",
        "body": "$1?.isEmpty ?? true",
        "description": "IsEmpty With Null..."
    },
    "?.isNotEmpty": {
        "prefix": ["?.isNotEmpty", "?.isnotempty", "isnotempty"],
        "scope": "dart",
        "body": "$1?.isNotEmpty ?? false",
        "description": "IsNotEmpty With Null..."
    }
}